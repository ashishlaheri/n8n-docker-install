# ⚡ n8n Docker Install on AWS EC2

Easily deploy [n8n](https://n8n.io/) (a powerful workflow automation tool) on your **AWS EC2 Ubuntu server** using Docker 🚀

---

## ✨ Features

✅ One-time setup script
✅ Runs n8n inside Docker
✅ Public access via EC2 IP
✅ Cookie fix (`N8N_SECURE_COOKIE=false`) so it works without HTTPS

---

## 📦 Prerequisites

* AWS EC2 Instance (Ubuntu 22.04+ recommended)
* Open **Security Group inbound rules**:

  * **TCP 22** → SSH
  * **TCP 5678** → n8n Web UI

---

## 🚀 Installation Guide

### 1️⃣ Connect to your EC2

```bash
ssh -i your-key.pem ubuntu@<ec2-public-ip>
```

---

### 2️⃣ Update your system

```bash
sudo apt update -y && sudo apt upgrade -y
```

---

### 3️⃣ Install dependencies

```bash
sudo apt install -y ca-certificates curl gnupg lsb-release
```

---

### 4️⃣ Add Docker GPG key

```bash
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
  sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
```

---

### 5️⃣ Setup Docker repo

```bash
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
```

---

### 6️⃣ Install Docker & Compose

```bash
sudo apt update -y
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
```

---

### 7️⃣ Start & enable Docker

```bash
sudo systemctl enable docker
sudo systemctl start docker
```

---

### 8️⃣ Allow Docker without `sudo`

```bash
sudo usermod -aG docker $USER
newgrp docker
```

---

### 9️⃣ Clone this repo

```bash
git clone https://github.com/ashishlaheri/n8n-docker-install.git
cd n8n-docker-install
```

---

### 🔟 Run installer

```bash
chmod +x install-n8n.sh
./install-n8n.sh
```

---

## 🌍 Access n8n

After installation, open your browser:

```
http://<ec2-public-ip>:5678
```

✨ Tip: If it doesn’t load, check your **EC2 Security Group** inbound rules for port `5678`.

---

## 🛠 Verify container

```bash
docker ps
```

Expected output:

```
CONTAINER ID   IMAGE        PORTS                    NAMES
abcd1234       n8nio/n8n    0.0.0.0:5678->5678/tcp   n8n
```

---

## 🎯 Next Steps

* 🌐 Setup **custom domain + SSL** with Nginx + Let’s Encrypt
* 🔄 Connect databases, APIs, and third-party services
* ⚡ Start building automation workflows

---

💡 **Made with ❤️ by Ashish Kumar Laheri**
